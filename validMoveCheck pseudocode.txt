BEGIN _moveCheck_ (space_clicked, space_states, player, enemy)

    (x, y) = space_clicked #space clicked provides an ordered pair
    #check current space state
    IF space_states(x,y) == 0 #0 is empty
        valid_move = TRUE
    ELSE
        valid_move = FALSE

    IF valid_move = TRUE
        Clear to_flip
        Clear flip_buffer
        #check north
        WHILE y < 7 AND done == FALSE
            y = y + 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check south
        WHILE y > 0 AND done == FALSE
            y = y - 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check east
        WHILE x < 7 AND done == FALSE
            x = x + 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check west
        WHILE x > 0 AND done == FALSE
            x = x - 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check NE
        WHILE x < 7 AND y < 7 AND done == FALSE
            x = x + 1
            y = y + 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check SE
        WHILE x < 7 AND y > 0 AND done == FALSE
            x = x + 1
            y = y - 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check SW
        WHILE x > 0 AND y > 0 AND done == FALSE
            x = x - 1
            y = y - 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

        #check NW
        WHILE x > 0 AND y < 7 AND done == FALSE
            x = x - 1
            y = y + 1
            IF space_states(x,y) == enemy
                Append (x,y) to flip_buffer #list of possible spaces to be flipped
            ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
                done = TRUE
                Append flip_buffer to to_flip
                Clear flip_buffer
            ELSE
                done = TRUE
                Clear flip_buffer

    IF len(to_flip) == 0
        valid_move = FALSE

    RETURN valid_move, to_flip
END _moveCheck_

"""BEGIN _spaceCheck_ ()
    IF space_states(x,y) == enemy
        Append (x,y) to flip_buffer #list of possible spaces to be flipped
    ELSE IF space_states(x,y) == player AND len(flip_buffer) > 0
        done = TRUE
    ELSE
        done = TRUE
        Clear flip_buffer
    RETURN flip_buffer
END _spaceCheck_"""